区间内的最大连续合数区间
搜索指定区间[c,d]内的最大连续合数区间。
输入： 键盘输入区间范围c,d。
输出： 区间内最多连续合数的个数，连续合数的起始与终止数。
例如输入 c,d:10,100
  最多连续合数的个数为：7
    连续合数区间为：[90,96]


2） 筛法设计思路
求出区间[c,d]内的所有相邻素数对f,m，求取m-f的最大值max。
注意到本题的搜索范围较大,采用效率较高的筛法求素数是适宜的。
求素数的筛法是公元前三世纪的厄拉多塞(Eratosthenes)提出来的:对于一个大整数x,只要知道不超过sqrt(x)的所有素数p，划去所有p的倍数2p,3p,...,剩下的整数就是不超过x的全部素数。
应用筛法求素数，为了方便实施"划去"操作，设置数组。
考虑到有时待测区间[c,d]比较大，为不使数组下标超维,或把[c,d]分割为若干子区间[cs,ds],确保在子区间中操作不超维。
每一数组元素对应一个待判别的奇数，并赋初值0。如果该奇数为p的倍数则应划去,对应元素加一个划去标记，通常给该元素赋值-1。最后,打印元素值不是-1(即没有划去)的元素对应的奇数即所求素数。
在实际应用筛法的过程中，p通常不限于取不超过sqrt(x)的素数，而是适当放宽取不超过sqrt(x)的奇数(从3开始)。这样做尽管多了一些重复划去操作，但程序实现要简便些。
在指定区间[cs,ds](约定cs为奇数)上所有奇数表示为j=cs+2k,(k=0,1,...,e,这里e=(ds-cs)/2)。于是k=(j-cs)/2是奇数j在数组中的序号(下标)。如果j为奇数的倍数时,对应数组元素作划去标记,即a[(j-cs)/2]=-1。
根据cs与奇数i,确定 g=2*int(cs/(2*i))+1,使得gi接近区间下限cs,从而使划去的gi,(g+2)i,...在[cs,ds]中,减少无效操作,以提高对大区间的筛选效率。
最后,凡数组元素a[k]≠-1,对应的奇数j=cs+2k则为素数。    
